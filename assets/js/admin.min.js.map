{"version":3,"sources":["webpack:///admin.min.js","webpack:///./assets/js/admin/admin.js"],"names":["webpackJsonp","21","module","exports","$","updateValidationFieldName","fieldList","find","each","index","this","nameAttr","attr","replace","buttons","_this","init_val","data","prop","processRedirectAction","redirect","slideUp","slideDown","processMailChimpAction","value","confirmDelete","_value","_accordion","document","on","_val","val","_buttonset","closest","length","draggable","connectToSortable","helper","stop","event","ui","ajax","method","url","ajaxurl","action","type","success","template","replaceWith","accordion","header","collapsible","heightStyle","active","datepicker","dateFormat","select2","preventDefault","confirm","remove","text","toLowerCase","sortable","placeholder","tabs","wpColorPicker","palettes","ready","selections","e","selection","params","id","addClass","removeClass","jQuery"],"mappings":"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","file":"admin.min.js","sourcesContent":["webpackJsonp([5],{\n\n/***/ 21:\n/***/ (function(module, exports) {\n\n(function ($) {\n    'use strict';\n\n    var fieldList = $('#shaplaFieldList'),\n        confirmDelete,\n        _this,\n        _value,\n        _accordion;\n\n    /**\n     * Update validation field name\n     */\n    function updateValidationFieldName() {\n        fieldList.find('.dcf-toggle').each(function (index) {\n\n            $(this).find('input,textarea,select').each(function () {\n                var nameAttr = $(this).attr('name');\n                if (!!nameAttr) {\n                    $(this).attr('name', nameAttr.replace(/\\[\\d+\\]/g, '[' + index + ']'));\n                }\n            });\n\n            // Update Buttonset checked fields\n            var buttons = $(this).find('.buttonset');\n            $.each(buttons, function () {\n                var _this = $(this),\n                    init_val = _this.data('initial_value'),\n                    radio = _this.find('input[type=\"radio\"][value=\"' + init_val + '\"]');\n\n                radio.prop('checked', true);\n            });\n        });\n    }\n\n    $(document).on('change', '.switch-input', function () {\n        var _this = $(this),\n            _val = _this.val(),\n            _buttonset = _this.closest('.buttonset');\n\n        if (_buttonset.length) {\n            _buttonset.data('initial_value', _val);\n        }\n    });\n\n    // Draggable\n    $(\".dcf-fields-list\").draggable({\n        connectToSortable: \"#shaplaFieldList\",\n        helper: \"clone\",\n        stop: function stop(event, ui) {\n            $.ajax({\n                method: 'POST',\n                url: ajaxurl,\n                data: {\n                    action: 'dcf_field_settings',\n                    type: $(this).data('type')\n                },\n                success: function success(template) {\n                    ui.helper.replaceWith(template);\n\n                    fieldList.find(\".dcf-toggle\").each(function () {\n                        $(this).accordion({\n                            header: '.dcf-toggle-title',\n                            collapsible: true,\n                            heightStyle: \"content\",\n                            active: false\n                        });\n                    });\n                    fieldList.find(\".dcf-date-picker\").each(function () {\n                        $(this).datepicker({\n                            dateFormat: 'yy-mm-dd'\n                        });\n                    });\n                    fieldList.find(\"select.select2\").each(function () {\n                        $(this).select2();\n                    });\n                }\n            });\n        }\n    });\n\n    // Delete Field\n    fieldList.on('click', '.deleteField', function (event) {\n        event.preventDefault();\n        confirmDelete = confirm(\"Are you sure to delete this field?\");\n        if (confirmDelete === true) {\n            $(this).closest('.dcf-toggle').remove();\n            updateValidationFieldName();\n        }\n    });\n\n    // Update field title\n    fieldList.on('keydown keyup', '.dcf-field-title', function () {\n        _this = $(this);\n        _value = _this.val();\n        _accordion = _this.closest('.dcf-toggle');\n        // Set field title as accordion header\n        _accordion.find('.dcf-toggle-title--label').text(_value);\n        // Set field title as placeholder text\n        _accordion.find('.dcf-field-placeholder').val(_value);\n        // Set field title as field id\n        _accordion.find('.dcf-field-id').val(_value.replace(/[\\W_]+/g, \"_\").toLowerCase());\n    });\n\n    // Make Form Fields Sortable\n    fieldList.sortable({\n        placeholder: \"ui-state-highlight\",\n        stop: function stop() {\n            updateValidationFieldName();\n        }\n    });\n\n    // Accordion\n    $(document).find(\".dcf-toggle\").each(function () {\n        if ($(this).data('id') === 'closed') {\n            $(this).accordion({\n                header: '.dcf-toggle-title',\n                collapsible: true,\n                heightStyle: \"content\",\n                active: false\n            });\n        } else {\n            $(this).accordion({\n                header: '.dcf-toggle-title',\n                collapsible: true,\n                heightStyle: \"content\"\n            });\n        }\n    });\n\n    $(\"#dcf-metabox-tabs\").tabs();\n\n    // WordPress ColorPicker\n    $('.dcf-colorpicker').each(function () {\n        $(this).wpColorPicker({\n            palettes: ['#f5f5f5', '#212121', '#00d1b2', '#009688', '#2196f3', '#4caf50', '#ffc107', '#f44336']\n        });\n    });\n\n    // Datepicker\n    $(document).find(\".dcf-date-picker\").each(function () {\n        $(this).datepicker({\n            dateFormat: 'yy-mm-dd'\n        });\n    });\n\n    // Select2\n    $(document).ready(function () {\n        $('select.select2').select2();\n\n        $('#_contact_form_actions').select2().on(\"select2:select\", function () {\n            var selections = $(this).val();\n            $.each(selections, function (index, value) {\n                $('#action-' + value).slideDown('fast');\n            });\n        }).on(\"select2:unselect\", function (e) {\n            var selection = e.params.data.id;\n            $('#action-' + selection).slideUp('fast');\n        });\n    });\n\n    // Action --- Redirect\n    function processRedirectAction(redirect) {\n        if ('page' === redirect) {\n            $('.col-redirect-url').slideUp('first');\n            $('.col-redirect-page_id').slideDown('first');\n        } else if ('url' === redirect) {\n            $('.col-redirect-page_id').slideUp('first');\n            $('.col-redirect-url').slideDown('first');\n        } else {\n            $('.col-redirect-page_id').slideUp('first');\n            $('.col-redirect-url').slideUp('first');\n        }\n    }\n\n    $(document).on('change', '#redirect_redirect_to', function () {\n        var redirect = $(this).find(\":selected\").val();\n        processRedirectAction(redirect);\n    });\n\n    $(document).ready(function () {\n        var redirect = $('#redirect_redirect_to').find(\":selected\").val();\n        processRedirectAction(redirect);\n    });\n\n    // Action --- MailChimp\n    function processMailChimpAction(value) {\n        if ('custom' === value) {\n            $('.col-mailchimp_api_key').slideDown('first');\n        } else {\n            $('.col-mailchimp_api_key').slideUp('first');\n        }\n    }\n\n    $(document).on('change', '#mailchimp_mailchimp_api_key_source', function () {\n        var source = $(this).find(\":selected\").val();\n        processMailChimpAction(source);\n    });\n\n    // Add new Form\n    $('body.post-type-dialog-contact-form').on('click', '.page-title-action', function (e) {\n        e.preventDefault();\n        $('#modal-form-template').addClass('is-active');\n    });\n\n    $(document).on('click', '[data-dismiss=\"modal\"]', function (e) {\n        e.preventDefault();\n        $(this).closest('.modal').removeClass('is-active');\n    });\n})(jQuery);\n\n/***/ })\n\n},[21]);\n\n\n// WEBPACK FOOTER //\n// admin.min.js","(function ($) {\n    'use strict';\n\n    var fieldList = $('#shaplaFieldList'),\n        confirmDelete,\n        _this,\n        _value,\n        _accordion;\n\n    /**\n     * Update validation field name\n     */\n    function updateValidationFieldName() {\n        fieldList.find('.dcf-toggle').each(function (index) {\n\n            $(this).find('input,textarea,select').each(function () {\n                var nameAttr = $(this).attr('name');\n                if (!!nameAttr) {\n                    $(this).attr('name', nameAttr.replace(/\\[\\d+\\]/g, '[' + index + ']'));\n                }\n            });\n\n            // Update Buttonset checked fields\n            var buttons = $(this).find('.buttonset');\n            $.each(buttons, function () {\n                var _this = $(this),\n                    init_val = _this.data('initial_value'),\n                    radio = _this.find('input[type=\"radio\"][value=\"' + init_val + '\"]');\n\n                radio.prop('checked', true);\n            });\n        });\n    }\n\n    $(document).on('change', '.switch-input', function () {\n        var _this = $(this),\n            _val = _this.val(),\n            _buttonset = _this.closest('.buttonset');\n\n        if (_buttonset.length) {\n            _buttonset.data('initial_value', _val);\n        }\n    });\n\n    // Draggable\n    $(\".dcf-fields-list\").draggable({\n        connectToSortable: \"#shaplaFieldList\",\n        helper: \"clone\",\n        stop: function (event, ui) {\n            $.ajax({\n                method: 'POST',\n                url: ajaxurl,\n                data: {\n                    action: 'dcf_field_settings',\n                    type: $(this).data('type'),\n                },\n                success: function (template) {\n                    ui.helper.replaceWith(template);\n\n                    fieldList.find(\".dcf-toggle\").each(function () {\n                        $(this).accordion({\n                            header: '.dcf-toggle-title',\n                            collapsible: true,\n                            heightStyle: \"content\",\n                            active: false\n                        });\n                    });\n                    fieldList.find(\".dcf-date-picker\").each(function () {\n                        $(this).datepicker({\n                            dateFormat: 'yy-mm-dd'\n                        });\n                    });\n                    fieldList.find(\"select.select2\").each(function () {\n                        $(this).select2();\n                    });\n                }\n            });\n        }\n    });\n\n    // Delete Field\n    fieldList.on('click', '.deleteField', function (event) {\n        event.preventDefault();\n        confirmDelete = confirm(\"Are you sure to delete this field?\");\n        if (confirmDelete === true) {\n            $(this).closest('.dcf-toggle').remove();\n            updateValidationFieldName();\n        }\n    });\n\n    // Update field title\n    fieldList.on('keydown keyup', '.dcf-field-title', function () {\n        _this = $(this);\n        _value = _this.val();\n        _accordion = _this.closest('.dcf-toggle');\n        // Set field title as accordion header\n        _accordion.find('.dcf-toggle-title--label').text(_value);\n        // Set field title as placeholder text\n        _accordion.find('.dcf-field-placeholder').val(_value);\n        // Set field title as field id\n        _accordion.find('.dcf-field-id').val(_value.replace(/[\\W_]+/g, \"_\").toLowerCase());\n    });\n\n    // Make Form Fields Sortable\n    fieldList.sortable({\n        placeholder: \"ui-state-highlight\",\n        stop: function () {\n            updateValidationFieldName();\n        }\n    });\n\n    // Accordion\n    $(document).find(\".dcf-toggle\").each(function () {\n        if ($(this).data('id') === 'closed') {\n            $(this).accordion({\n                header: '.dcf-toggle-title',\n                collapsible: true,\n                heightStyle: \"content\",\n                active: false\n            });\n        } else {\n            $(this).accordion({\n                header: '.dcf-toggle-title',\n                collapsible: true,\n                heightStyle: \"content\"\n            });\n        }\n    });\n\n\n    $(\"#dcf-metabox-tabs\").tabs();\n\n    // WordPress ColorPicker\n    $('.dcf-colorpicker').each(function () {\n        $(this).wpColorPicker({\n            palettes: [\n                '#f5f5f5',\n                '#212121',\n                '#00d1b2',\n                '#009688',\n                '#2196f3',\n                '#4caf50',\n                '#ffc107',\n                '#f44336'\n            ]\n        });\n    });\n\n    // Datepicker\n    $(document).find(\".dcf-date-picker\").each(function () {\n        $(this).datepicker({\n            dateFormat: 'yy-mm-dd'\n        });\n    });\n\n    // Select2\n    $(document).ready(function () {\n        $('select.select2').select2();\n\n        $('#_contact_form_actions')\n            .select2()\n            .on(\"select2:select\", function () {\n                var selections = $(this).val();\n                $.each(selections, function (index, value) {\n                    $('#action-' + value).slideDown('fast');\n                });\n            })\n            .on(\"select2:unselect\", function (e) {\n                var selection = e.params.data.id;\n                $('#action-' + selection).slideUp('fast');\n            });\n    });\n\n    // Action --- Redirect\n    function processRedirectAction(redirect) {\n        if ('page' === redirect) {\n            $('.col-redirect-url').slideUp('first');\n            $('.col-redirect-page_id').slideDown('first');\n        } else if ('url' === redirect) {\n            $('.col-redirect-page_id').slideUp('first');\n            $('.col-redirect-url').slideDown('first');\n        } else {\n            $('.col-redirect-page_id').slideUp('first');\n            $('.col-redirect-url').slideUp('first');\n        }\n    }\n\n    $(document).on('change', '#redirect_redirect_to', function () {\n        var redirect = $(this).find(\":selected\").val();\n        processRedirectAction(redirect);\n    });\n\n    $(document).ready(function () {\n        var redirect = $('#redirect_redirect_to').find(\":selected\").val();\n        processRedirectAction(redirect);\n    });\n\n    // Action --- MailChimp\n    function processMailChimpAction(value) {\n        if ('custom' === value) {\n            $('.col-mailchimp_api_key').slideDown('first');\n        } else {\n            $('.col-mailchimp_api_key').slideUp('first');\n        }\n    }\n\n    $(document).on('change', '#mailchimp_mailchimp_api_key_source', function () {\n        var source = $(this).find(\":selected\").val();\n        processMailChimpAction(source);\n    });\n\n    // Add new Form\n    $('body.post-type-dialog-contact-form').on('click', '.page-title-action', function (e) {\n        e.preventDefault();\n        $('#modal-form-template').addClass('is-active');\n    });\n\n    $(document).on('click', '[data-dismiss=\"modal\"]', function (e) {\n        e.preventDefault();\n        $(this).closest('.modal').removeClass('is-active');\n    });\n\n})(jQuery);\n\n\n\n// WEBPACK FOOTER //\n// ./assets/js/admin/admin.js"],"sourceRoot":""}